name: Stack App CI and Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/*.yml'

jobs:
  build-test-and-release:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js Environment
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm ci

      - name: Run Lint
        run: npm run lint

      - name: Run Tests
        run: npm run test

      - name: Build Extension
        env:
          NODE_ENV: 'production'
        run: npm run build

      - name: Package Extension
        run: |
          cp manifest.json dist
          cd dist
          zip -r ../extension.zip ./*
          cd ..

      # Configure Git User
      - name: Configure Git User
        run: |
          git config user.email "4815162342@lost.com"
          git config user.name "John Locke"

      # Bump Version and Create Tag
      - name: Bump Version and Create Tag
        id: bump_version
        run: |
          npm install -g standard-version
          standard-version --no-verify --commit-all --release-as patch -m "chore(release): %s [skip ci]"
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "::set-output name=new_version::$NEW_VERSION"
          echo "::set-output name=new_tag::v$NEW_VERSION"

      # Push Changes and Tags
      - name: Push Changes and Tags
        run: |
          git push origin main --tags

      # Create GitHub Release
      - name: Create GitHub Release
        id: create_release   # Added ID here
        if: always()
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.bump_version.outputs.new_tag }}
          release_name: "Release v${{ steps.bump_version.outputs.new_version }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      # Upload Release Asset
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./extension.zip
          asset_name: extension-v${{ steps.bump_version.outputs.new_version }}.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

